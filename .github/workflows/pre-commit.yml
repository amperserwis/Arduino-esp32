name: Pre-commit check

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled]
  workflow_run:
    workflows: ["ESP32 Arduino CI"]
    types: [completed]
    branches-ignore: [master, release/*, idf-release/*, gh-pages]

concurrency:
  group: pre-commit-${{github.event.pull_request.number || github.ref}}
  cancel-in-progress: true

jobs:
  save-workflow-id:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
    name: Save compilation workflow ID
    runs-on: ubuntu-latest
    outputs:
      workflow_id: ${{ steps.save-workflow-id.outputs.workflow_id }}
    steps:
      - name: Save workflow ID
        id: save-workflow-id
        run: echo "workflow_id=${{ github.event.workflow_run.id }}" >> $GITHUB_OUTPUT

  lint:
    if: always()
    #if: ${{ always() && contains(github.event.pull_request.labels.*.name, 'Status: Pending Merge') }}
    needs: save-workflow-id
    name: Run pre-commit hooks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Get Python version hash
        run: |
          echo "Using $(python -VV)"
          echo "PY_HASH=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV

      - name: Restore pre-commit cache
        uses: actions/cache/restore@v4
        id: restore-cache
        with:
          path: |
            ~/.cache/pre-commit
            ~/.cache/pip
          key: pre-commit|${{ env.PY_HASH }}|${{ hashFiles('.pre-commit-config.yaml', '.github/workflows/pre-commit.yml') }}

      - name: Download compilation artifacts
        uses: actions/download-artifact@v4
        if: ${{ needs.save-workflow-id.outputs.workflow_id != '' }}
        with:
          pattern: build-job-*
          merge-multiple: true
          path: ~/.arduino/tests/
          run-id: ${{ needs.save-workflow-id.outputs.workflow_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge compile commands
        if: ${{ needs.save-workflow-id.outputs.workflow_id != '' }}
        run: |
          find ~/.arduino/tests/ -iname "compile_commands.json" | xargs jq -s 'map(.[])' > ~/compile_commands.json

      - name: Upload compile commands
        if: ${{ needs.save-workflow-id.outputs.workflow_id != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: compile_commands
          path: ~/compile_commands.json

      - name: Install python dependencies
        run: python -m pip install pre-commit docutils

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42.0.2

      - name: Run pre-commit hooks in changed files
        run: pre-commit run --color=always --show-diff-on-failure --files ${{ steps.changed-files.outputs.all_changed_files }}

      - name: Save pre-commit cache
        uses: actions/cache/save@v4
        if: ${{ always() && steps.restore-cache.outputs.cache-hit != 'true' }}
        continue-on-error: true
        with:
          path: |
            ~/.cache/pre-commit
            ~/.cache/pip
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}

      - name: Push changes using pre-commit-ci-lite
        uses: pre-commit-ci/lite-action@v1.0.2
        if: always()
