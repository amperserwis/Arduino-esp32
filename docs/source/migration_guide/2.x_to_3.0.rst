#########################
Migration from 2.x to 3.0
#########################

Introduction
------------

This is a guide to highlight breaking changes in the API and to help the migration of projects from versions 2.X to version 3.0 of the Arduino ESP32 core. 
For more information about the changes and new features, check `RELEASE NOTES <https://github.com/espressif/arduino-esp32/releases>`_.

ADC
---

Removed APIs
************

* ``analogSetClockDiv``
* ``adcAttachPin``
* ``analogSetVRefPin``

BLE
---

Changes in APIs
***************

* Changed APIs return and parameter type from ``std::string`` to Arduino style ``String``.
* Changed UUID data type from ``uint16_t`` to ``BLEUUID`` class.

Hall Sensor
-----------

Hall sensor is no longer supported.

Removed APIs
************

* ``hallRead``

I2S
---

The I2S driver has been completely redesigned and refactored to use the new ESP-IDF driver. 
For more information about the new API, check :doc:`/api/i2s`.

LEDC
----

The LEDC API has been changed in order to support the Peripheral Manager and make it easier to use, as LEDC channels are now automatically assigned to pins.
For more information about the new API, check :doc:`/api/ledc`.

Removed APIs
************

* ``ledcSetup``
* ``ledcAttachPin``

New APIs
********

* ``ledcAttach`` used to set up the LEDC pin (merged ``ledcSetup`` and ``ledcAttachPin`` functions).
* ``timerGetFrequency`` used to get the actual frequency of the timer.
* ``timerAttachInterruptArg`` used to attach the interrupt to a timer using arguments.

Changes in APIs
***************

* ``ledcDetachPin`` renamed to ``ledcDetach``.
* In all functions, input parameter ``channel`` has been changed to ``pin``.

RMT
---

For more information about the new API, check :doc:`/api/rmt`.

Removed APIs
************

* ``_rmtDumpStatus``
* ``rmtSetTick``
* ``rmtWriteBlocking``
* ``rmtEnd``
* ``rmtBeginReceive``
* ``rmtReadData``

New APIs
********

* ``rmtWriteAsync``
* ``rmtTransmitCompleted``
* ``rmtSetRxMinThreshold``


Changes in APIs
***************

* In all functions, input parameter ``rmt_obj_t* rmt`` has been changed to ``int pin``.
* ``rmtInit`` return parameter changed to bool.
* ``rmtInit`` input parameter ``bool tx_not_rx`` has been changed to ``rmt_ch_dir_t channel_direction``.
* ``rmtInit`` new input parameter ``uint32_t frequency_Hz`` to set frequency of RMT channel as function ``rmtSetTick`` was removed.
* ``rmtWrite`` now sending data in blocking mode - only returns after sending all data or by timeout. For Async mode use new ``rmtWriteAsync`` function.
* ``rmtWrite`` new input parameter ``uint32_t timeout_ms``.
* ``rmtLoop`` renamed to ``rmtWriteLooping``.
* ``rmtRead`` input parameters changed to ``int pin, rmt_data_t* data, size_t *num_rmt_symbols, uint32_t timeout_ms``.
* ``rmtReadAsync`` input parameters changed to ``int pin, rmt_data_t* data, size_t *num_rmt_symbols``.
* ``rmtSetRxThreshold`` renamed to ``rmtSetRxMaxThreshold`` and input parameter ``uint32_t value`` has been changed to ``uint16_t idle_thres_ticks``.
* ``rmtSetCarrier`` input parameters ``uint32_t low, uint32_t high`` has been changed to ``uint32_t frequency_Hz, float duty_percent``.

SigmaDelta
----------

SigmaDelta has been refactored to use the new ESP-IDF driver.
For more information about the new API, check :doc:`/api/sigmadelta`.

Removed APIs
************

* ``sigmaDeltaSetup``
* ``sigmaDeltaRead``

New APIs
********

* ``sigmaDeltaAttach`` used to set up the SigmaDelta pin (channel is acquired automatically).
* ``timerGetFrequency`` used to get the actual frequency of the timer.
* ``timerAttachInterruptArg`` used to attach the interrupt to a timer using arguments.

Changes in APIs
***************

* ``sigmaDeltaDetachPin`` renamed to ``sigmaDeltaDetach``.
* ``sigmaDeltaWrite`` input parameter ``channel`` has been changed to ``pin``.

Timer
-----

Timer has been refactored to use the new ESP-IDF driver and its API got simplified. For more information about the new API check :doc:`/api/timer`.

Removed APIs
************

* ``timerGetConfig``
* ``timerSetConfig``
* ``timerSetDivider``
* ``timerSetCountUp``
* ``timerSetAutoReload``
* ``timerGetDivider``
* ``timerGetCountUp``
* ``timerGetAutoReload``
* ``timerAlarmEnable``
* ``timerAlarmDisable``
* ``timerAlarmWrite``
* ``timerAlarmEnabled``
* ``timerAlarmRead``
* ``timerAlarmReadMicros``
* ``timerAlarmReadSeconds``
* ``timerAttachInterruptFlag``

New APIs
********

* ``timerAlarm`` used to set up Alarm for the timer and enable it automatically (merged ``timerAlarmWrite`` and ``timerAlarmEnable`` functions).
* ``timerGetFrequency`` used to get the actual frequency of the timer.
* ``timerAttachInterruptArg`` used to attach the interrupt to a timer using arguments.

Changes in APIs
***************

* ``timerBegin`` has now only 1 parameter (frequency). There is an automatic calculation of the divider using different clock sources
  to achieve the selected frequency.
* ``timerAttachInterrupt`` has now only 2 parameters. The ``edge`` parameter has been removed.

UART
----

Removed APIs
************

* ``uartDetachPins``
  
New APIs
********

* ``uart_get_RxPin`` used to get UART RX pin number.
* ``uart_get_TxPin`` used to get UART TX pin number.

Changes in APIs
***************

* ``uartEnd`` input parameter ``uart_t* uart`` has been changed to ``uint8_t uart_num``.
* ``uartSetMode`` input parameter ``uint8_t mode`` has been changed to ``uart_mode_t mode``.
* ``uartSetHwFlowCtrlMode`` input parameter ``uint8_t mode`` has been changed to ``uart_hw_flowcontrol_t mode``.
